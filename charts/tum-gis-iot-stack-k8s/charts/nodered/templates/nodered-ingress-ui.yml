{{- if .Values.enabled -}}
{{- if .Values.ingress.enabled -}}
{{- $fullName := include "nodered.fullname" . -}}
{{- $svcPort := .Values.service.port -}}
{{- $domains:= coalesce .Values.global.ingress.domains .Values.ingress.domains }}
{{- if empty $domains }}
{{- fail "No ingress domains specified. Set either .Values.global.inress.domains[] or .Values.inress.domains[]." }}
{{- end }}
{{- $subpath := .Values.ingress.subpath -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "nodered.fullname" . }}-ui
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "nodered.labels" . | nindent 4 }}
    app.kubernetes.io/part-of: tum-gis-iot-stack-k8s
    app.kubernetes.io/component: {{ .Values.component }}
  annotations:
    {{- if (and (not (empty (coalesce .Values.global.ingress.certManager.issuerName .Values.ingress.certManager.issuerName )))
    (eq (coalesce .Values.global.ingress.certManager.issuerType .Values.ingress.certManager.issuerType) "cluster")) }}
    cert-manager.io/cluster-issuer: {{ .Values.global.ingress.certManager.issuerName | default .Values.ingress.certManager.issuerName | quote }}
    {{- end }}
    {{- if (and (not (empty (coalesce .Values.global.ingress.certManager.issuerName .Values.ingress.certManager.issuerName )))
    (eq (coalesce .Values.global.ingress.certManager.issuerType .Values.ingress.certManager.issuerType) "namespace")) }}
    cert-manager.io/issuer: {{ .Values.global.ingress.certManager.issuerName | default .Values.ingress.certManager.issuerName | quote }}
    {{- end }}
    {{ if $subpath -}}
    nginx.ingress.kubernetes.io/rewrite-target: "/$2"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      rewrite ^/{{ $subpath }}$ /{{ $subpath }}/ redirect;
    {{- else -}}
    nginx.ingress.kubernetes.io/rewrite-target: "/$1"
    {{- end }}
    {{- with .Values.ingress.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- with .Values.global.ingress.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  ingressClassName: {{ .Values.global.ingress.className | default .Values.ingress.className }}
  tls:
  - hosts:
  {{- range $domains }}
    - {{ . }}
  {{- end }}
    secretName: tls
  rules:
  {{- range $domains }}
  - host: {{ . }}
    http:
      paths:
      {{- if $subpath }}
      - path: /{{ $subpath }}/ui(/|$)(.*)
      {{- end }}
      {{- if not $subpath }}
      - path: /ui/(.*)
      {{- end }}
        pathType: ImplementationSpecific
        backend:
          service:
            name: {{ $fullName }}
            port:
              number: {{ $svcPort }}
  {{- end }}
{{- end -}}
{{- end -}}
